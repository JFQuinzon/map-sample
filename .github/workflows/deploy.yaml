name: Deploy Zero Downtime Blue-Green

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy via SSH
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_ed25519 ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
            set -e

            GREEN_PORT=3002
            BLUE_PORT=3001

            GREEN_DIR="/usr/share/nginx/html/test-apgit-green"
            BLUE_DIR="/usr/share/nginx/html/test-apgit-blue"
            TEMP_DIR="/tmp/deploy-temp"

            CURRENT_PORT=\$(grep -Po '\d+' /etc/nginx/upstreams/active_backend.conf)
            if [ "\$CURRENT_PORT" = "\$GREEN_PORT" ]; then
              TARGET_PORT="\$BLUE_PORT"
              TARGET_DIR="\$BLUE_DIR"
              TARGET_CONF="/etc/nginx/upstreams/blue.conf"
              NAME="test-apgit-blue"
            else
              TARGET_PORT="\$GREEN_PORT"
              TARGET_DIR="\$GREEN_DIR"
              TARGET_CONF="/etc/nginx/upstreams/green.conf"
              NAME="test-apgit-green"
            fi

            echo "üì• Cloning repo into temp directory..."
            sudo rm -rf "\$TEMP_DIR"
            git clone https://github.com/JFQuinzon/map-sample.git "\$TEMP_DIR"

            echo "‚ôªÔ∏è Updating target directory \$TARGET_DIR..."
            sudo rm -rf "\$TARGET_DIR"
            sudo mkdir -p "\$TARGET_DIR"
            sudo cp -r "\$TEMP_DIR"/* "\$TARGET_DIR"
            sudo cp -r "\$TEMP_DIR"/.[!.]* "\$TARGET_DIR" || true

            cd "\$TARGET_DIR"
            echo "üì¶ Installing dependencies..."
            sudo npm install

            echo "üèóÔ∏è Building project..."
            sudo npm run build

            echo "üöÄ Starting or restarting PM2 app on port \$TARGET_PORT..."
            pm2 start npm --name "\$NAME" -- start -- --port \$TARGET_PORT || \
            pm2 restart "\$NAME" -- update-env

            echo "‚è≥ Waiting for app to respond on port \$TARGET_PORT..."
            for i in {1..10}; do
              if curl -s http://127.0.0.1:\$TARGET_PORT > /dev/null; then
                echo "‚úÖ App is ready!"
                break
              fi
              echo "Waiting... (\$i)"
              sleep 2
            done

            echo "üîÅ Switching active NGINX upstream..."
            sudo ln -sfn "\$TARGET_CONF" /etc/nginx/upstreams/active_backend.conf
            sudo nginx -s reload

            echo "‚úÖ Deployment complete with ZERO downtime!"
          EOF
